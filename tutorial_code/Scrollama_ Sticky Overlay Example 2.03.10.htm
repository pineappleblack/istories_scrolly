<!DOCTYPE html>
<!-- saved from url=(0061)https://russellgoldenberg.github.io/scrollama/sticky-overlay/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Scrollama: Sticky Overlay Example</title>
    <meta name="description" content="Scrollama: Sticky Overlay Example">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="./Scrollama_ Sticky Overlay Example_files/style.css">
    <style>
      #scrolly {
        position: relative;
        background-color: #f3f3f3;
        padding: 1rem;
      }

      article {
        position: relative;
        padding: 0;
        max-width: 20rem;
        margin: 0 auto;
      }

      figure {
        position: -webkit-sticky;
        position: sticky;
        left: 0;
        width: 100%;
        margin: 0;
        -webkit-transform: translate3d(0, 0, 0);
        -moz-transform: translate3d(0, 0, 0);
        transform: translate3d(0, 0, 0);
        background-color: #8a8a8a;
        z-index: 0;
      }

      figure p {
        text-align: center;
        padding: 1rem;
        position: absolute;
        top: 50%;
        left: 50%;
        -moz-transform: translate(-50%, -50%);
        -webkit-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        font-size: 8rem;
        font-weight: 900;
        color: #fff;
      }

      .step {
        margin: 0 auto 2rem auto;
        color: #fff;
        background-color: rgba(0, 0, 0);
        font-size: 14px;
        padding: 2em;
        text-align: center;
      }

      .invisible {
        visibility: hidden;
      }

      .step:last-child {
        margin-bottom: 0;
      }

      .step.is-active p {
        background-color: goldenrod;
        color: #3b3b3b;
      }

      .step p {
        text-align: center;
        padding: 1rem;
        font-size: 1.5rem;
        background-color: #3b3b3b;
      }
    </style>
  </head>

  <body>
    <main>
      <section id="intro">
        <h1 class="intro__hed">Sticky Overlay Example</h1>
        <p class="intro__dek">
          Start scrolling to see how it works.
        </p>
      </section>

      <section id="scrolly">
        <figure style="height: 327px; top: 163.5px;">
          <div class="flourish-embed" data-src="story/506432" data-url="https://flo.uri.sh/story/506432/embed"><script src="https://public.flourish.studio/resources/embed.js"></script></div>
        </figure>

        <article>
          <div class="step invisible">
          </div>
          <div class="step">
            График в 2016 году выглядел очень странно.
          </div>
          <div class="step invisible">
          </div>
          <div class="step">
            Графики других партий выглядели иначе
          </div>
          <div class="step invisible">
          </div>
          <div class="step">
            А этот фрагмент — совсем подозрительный
          </div>
          
        </article>
      </section>

      <section id="outro"></section>
    </main>

    <!-- <div class='debug'></div> -->
    <script src="./Scrollama_ Sticky Overlay Example_files/d3.min.js"></script>
    <script src="./Scrollama_ Sticky Overlay Example_files/intersection-observer.js"></script>
    <script src="./Scrollama_ Sticky Overlay Example_files/stickyfill.min.js"></script>
    <script src="./Scrollama_ Sticky Overlay Example_files/scrollama.min.js"></script>
    <script>
      // using d3 for convenience
      var main = d3.select("main");
      var scrolly = main.select("#scrolly");
      var figure = scrolly.select("figure");
      var article = scrolly.select("article");
      var step = article.selectAll(".step");

      // initialize the scrollama
      var scroller = scrollama();

      // generic window resize listener event
      function handleResize() {
        // 1. update height of step elements
        var stepH = Math.floor(window.innerHeight * 0.75);
        step.style("height", 300 + "px");

        var figureHeight = window.innerHeight / 2;
        var figureMarginTop = (window.innerHeight - figureHeight) / 2;

        figure
          .style("height", figureHeight + "px")
          .style("top", 0 + "px");

        // 3. tell scrollama to update new element dimensions
        scroller.resize();
      }

      // scrollama event handlers
      function handleStepEnter(response) {
        console.log(response);
        // response = { element, direction, index }

        // add color to current step only
        step.classed("is-active", function(d, i) {
          return i === response.index;
        });

        // update graphic based on step
        figure.select("p").text(response.index + 1);

        var iframe = document.querySelector("#scrolly iframe");
        iframe.src = iframe.src.replace(/#slide-.*/, "") + "#slide-" + response.index;

      }

      function setupStickyfill() {
        d3.selectAll(".sticky").each(function() {
          Stickyfill.add(this);
        });
      }

      function init() {
        setupStickyfill();

        // 1. force a resize on load to ensure proper dimensions are sent to scrollama
        handleResize();

        // 2. setup the scroller passing options
        // 		this will also initialize trigger observations
        // 3. bind scrollama event handlers (this can be chained like below)
        scroller
          .setup({
            step: "#scrolly article .step",
            offset: 0.33,
            debug: false
          })
          .onStepEnter(handleStepEnter);

        // setup resize event
        window.addEventListener("resize", handleResize);
      }

      // kick things off
      init();
    </script>
  

</body></html>